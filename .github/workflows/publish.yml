name: Build and Publish Python Package

on:
  # release:
  #   types: [published]
  # pull_request:
  push:
    branches:
      - main-failed

permissions:
  contents: read

jobs:
  build:
    name: Build and Test on Multiple OS
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        # python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        python-version: ['3.10']
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Debug PATH
        run: echo $PATH

      - name: Verify Python Version
        run: python --version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine pytest

      - name: Build the package
        run: |
          python setup.py sdist bdist_wheel

      - name: Test the package
        run: |
          pip install . && pytest

      - name: Upload artifacts
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/*

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'

    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m pip install --upgrade pip
          pip install twine
          twine upload dist/*

  update-stable-branch:
    name: Update stable branch
    needs: [build, publish]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    permissions:
      contents: write

    steps:
      - name: Checkout stable branch
        uses: actions/checkout@v4
        with:
          ref: stable
          fetch-depth: 0

      - name: Update stable branch to release tag & push
        run: |
          git reset --hard ${{ github.event.release.tag_name }}
          git push
